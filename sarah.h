/* sarah.h generated by valac 0.28.1, the Vala compiler, do not modify */


#ifndef __SARAH_H__
#define __SARAH_H__

#include <glib.h>
#include <glib-object.h>
#include <stdlib.h>
#include <string.h>
#include <libpeas/peas.h>

G_BEGIN_DECLS


#define SARAH_TYPE_IEXTENSION (sarah_iextension_get_type ())
#define SARAH_IEXTENSION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SARAH_TYPE_IEXTENSION, SarahIExtension))
#define SARAH_IS_IEXTENSION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SARAH_TYPE_IEXTENSION))
#define SARAH_IEXTENSION_GET_INTERFACE(obj) (G_TYPE_INSTANCE_GET_INTERFACE ((obj), SARAH_TYPE_IEXTENSION, SarahIExtensionIface))

typedef struct _SarahIExtension SarahIExtension;
typedef struct _SarahIExtensionIface SarahIExtensionIface;

#define SARAH_TYPE_CORE (sarah_core_get_type ())
#define SARAH_CORE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SARAH_TYPE_CORE, SarahCore))
#define SARAH_CORE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SARAH_TYPE_CORE, SarahCoreClass))
#define SARAH_IS_CORE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SARAH_TYPE_CORE))
#define SARAH_IS_CORE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SARAH_TYPE_CORE))
#define SARAH_CORE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SARAH_TYPE_CORE, SarahCoreClass))

typedef struct _SarahCore SarahCore;
typedef struct _SarahCoreClass SarahCoreClass;
typedef struct _SarahCorePrivate SarahCorePrivate;

#define SARAH_TYPE_APP (sarah_app_get_type ())
#define SARAH_APP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SARAH_TYPE_APP, SarahApp))
#define SARAH_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SARAH_TYPE_APP, SarahAppClass))
#define SARAH_IS_APP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SARAH_TYPE_APP))
#define SARAH_IS_APP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SARAH_TYPE_APP))
#define SARAH_APP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SARAH_TYPE_APP, SarahAppClass))

typedef struct _SarahApp SarahApp;
typedef struct _SarahAppClass SarahAppClass;
typedef struct _SarahAppPrivate SarahAppPrivate;

struct _SarahIExtensionIface {
	GTypeInterface parent_iface;
	void (*activate) (SarahIExtension* self, gchar** args, int args_length1);
	void (*deactivate) (SarahIExtension* self);
	GObject* (*get_object) (SarahIExtension* self);
	void (*set_object) (SarahIExtension* self, GObject* value);
};

struct _SarahCore {
	GObject parent_instance;
	SarahCorePrivate * priv;
	SarahIExtension* extension;
	PeasEngine* engine;
	PeasExtensionSet* extension_set;
	PeasPluginInfo* plugin;
};

struct _SarahCoreClass {
	GObjectClass parent_class;
};

struct _SarahApp {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SarahAppPrivate * priv;
};

struct _SarahAppClass {
	GTypeClass parent_class;
	void (*finalize) (SarahApp *self);
};


GType sarah_iextension_get_type (void) G_GNUC_CONST;
void sarah_iextension_activate (SarahIExtension* self, gchar** args, int args_length1);
void sarah_iextension_deactivate (SarahIExtension* self);
GObject* sarah_iextension_get_object (SarahIExtension* self);
void sarah_iextension_set_object (SarahIExtension* self, GObject* value);
GType sarah_core_get_type (void) G_GNUC_CONST;
SarahCore* sarah_core_new (void);
SarahCore* sarah_core_construct (GType object_type);
gchar** sarah_core_list (SarahCore* self, gboolean active, int* result_length1);
void sarah_core_run (SarahCore* self, gchar** args, int args_length1);
gpointer sarah_app_ref (gpointer instance);
void sarah_app_unref (gpointer instance);
GParamSpec* sarah_param_spec_app (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void sarah_value_set_app (GValue* value, gpointer v_object);
void sarah_value_take_app (GValue* value, gpointer v_object);
gpointer sarah_value_get_app (const GValue* value);
GType sarah_app_get_type (void) G_GNUC_CONST;
SarahApp* sarah_app_new (void);
SarahApp* sarah_app_construct (GType object_type);
void sarah_app_init (SarahApp* self, gchar** args, int args_length1);


G_END_DECLS

#endif
